// Generated by CoffeeScript 1.3.3
(function() {
  var MessageClient,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  MessageClient = (function() {

    function MessageClient(options) {
      this.did_update = __bind(this.did_update, this);

      this.did_close = __bind(this.did_close, this);
      this.atmos = options.atmos;
      this.base = options.base;
    }

    MessageClient.prototype.connect = function() {
      var _this = this;
      this.close();
      console.log("messages connecting to " + this.base);
      this.socket = SocketIO.connect(this.base, {
        'force new connection': true
      });
      this.socket.on('connect', function() {
        return console.log('socket connected');
      });
      this.socket.on('update', this.did_update);
      return this.socket.on('disconnect', this.did_close);
    };

    MessageClient.prototype.close = function() {
      if (this.socket) {
        return this.socket.disconnect();
      }
    };

    MessageClient.prototype.did_close = function() {
      console.log("messages connection closed");
      return this.socket = null;
    };

    MessageClient.prototype.send = function(type, content) {
      return this.socket.emit(type, content);
    };

    MessageClient.prototype.did_update = function(payload) {
      return this.atmos.trigger('update_object', payload);
    };

    return MessageClient;

  })();

  module.exports = MessageClient;

}).call(this);
