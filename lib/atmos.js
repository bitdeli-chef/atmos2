// Generated by CoffeeScript 1.3.3
(function() {
  var Atmos, MessageClient, ResourceClient, SocketIO, Spine, method, resource_methods, _i, _len,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Spine = require('spine');

  SocketIO = require('./vendor/socket.io');

  window.SocketIO = SocketIO;

  MessageClient = require('./message_client');

  ResourceClient = require('./resource_client');

  Atmos = (function(_super) {

    __extends(Atmos, _super);

    Atmos.include(Spine.Events);

    function Atmos(options) {
      /* Creates an instance of Atmos.
      */
      this.messages = new MessageClient({
        atmos: this
      });
      this.resources = new ResourceClient({
        atmos: this
      });
      Atmos.instance = this;
    }

    Atmos.prototype.did_auth = function(content) {
      return this.trigger("auth_success");
    };

    Atmos.prototype.did_fail_auth = function(content) {
      return this.trigger("auth_fail");
    };

    return Atmos;

  })(Spine.Module);

  resource_methods = ['fetch', 'save', 'execute', 'request'];

  for (_i = 0, _len = resource_methods.length; _i < _len; _i++) {
    method = resource_methods[_i];
    Atmos.prototype[method] = function() {
      return this.resources[method].apply(this.resources, arguments);
    };
    Atmos[method] = function() {
      return Atmos.instance.resources[method].apply(Atmos.instance.resources, arguments);
    };
  }

  module.exports = Atmos;

}).call(this);
